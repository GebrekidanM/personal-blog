{"version":3,"sources":["turbopack:///[project]/node_modules/next/navigation.js","turbopack:///[project]/lib/api.js","turbopack:///[project]/hooks/useAuth.js","turbopack:///[project]/app/(admin)/admin/EditPostForm.jsx"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n","export const api = process.env.NEXT_PUBLIC_API_URL;","// hooks/useAuth.js\r\n'use client';\r\nimport { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\n\r\nconst useAuth = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      // Here you could add a step to verify the token with the backend\r\n      // For now, we'll just check if it exists.\r\n      setIsAuthenticated(true);\r\n    } else {\r\n      // If no token, redirect to login page\r\n      router.push('/admin/login');\r\n    }\r\n    setLoading(false);\r\n  }, [router]);\r\n\r\n  return { isAuthenticated, loading };\r\n};\r\n\r\nexport default useAuth;","'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'next/navigation';\r\nimport TiptapEditor from '../../../components/TiptapEditor';\r\nimport { api } from '@/lib/api';\r\n\r\nexport default function EditPostForm({ initialPostData }) {\r\n  const router = useRouter();\r\n  \r\n  // Use a single state object for all form fields\r\n  const [formData, setFormData] = useState({\r\n    title: initialPostData.title || '',\r\n    slug: initialPostData.slug || '',\r\n    excerpt: initialPostData.excerpt || '',\r\n    category: initialPostData.category || 'Strategic Insights',\r\n    featuredImageUrl: initialPostData.featuredImageUrl || '',\r\n  });\r\n\r\n  // Content is handled separately because the editor component needs it this way\r\n  const [content, setContent] = useState(initialPostData.content || '');\r\n\r\n  // State for UI feedback\r\n  const [status, setStatus] = useState('');\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n\r\n  // Function to handle changes in standard input fields\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Auto-generate slug from title\r\n  useEffect(() => {\r\n    // We only update the slug if the user is typing in the title field\r\n    const generatedSlug = formData.title.toLowerCase().trim().replace(/[^\\w\\s-]/g, '').replace(/[\\s_-]+/g, '-').replace(/^-+|-+$/g, '');\r\n    setFormData(prev => ({ ...prev, slug: generatedSlug }));\r\n  }, [formData.title]);\r\n\r\n\r\n  // Function to handle image upload\r\n  const handleImageUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    const uploadFormData = new FormData();\r\n    uploadFormData.append('image', file);\r\n    setIsUploading(true);\r\n    setStatus('Uploading image...');\r\n    try {\r\n      const token = localStorage.getItem('authToken');\r\n      const res = await axios.post(`${api}/upload`, uploadFormData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'x-auth-token': token,\r\n        },\r\n      });\r\n      // Update the formData state with the new image URL\r\n      setFormData(prev => ({ ...prev, featuredImageUrl: res.data.imageUrl }));\r\n      setStatus('Image uploaded successfully!');\r\n    } catch (err) {\r\n      setStatus('Image upload failed.');\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n\r\n  // Function to handle the final form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsUpdating(true);\r\n    setStatus('Updating post...');\r\n\r\n    try {\r\n      const token = localStorage.getItem('authToken');\r\n      const finalPostData = { ...formData, content };\r\n      \r\n      await axios.put(`${api}/posts/${initialPostData._id}`, finalPostData, {\r\n        headers: { 'x-auth-token': token },\r\n      });\r\n\r\n      setStatus('Post updated successfully!');\r\n      setTimeout(() => router.push('/admin/posts'), 1500);\r\n    } catch (err) {\r\n      setStatus(err.response?.data?.msg || 'Failed to update post.');\r\n    } finally {\r\n      setIsUpdating(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-3xl font-bold\">Edit Post</h1>\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isUpdating || isUploading}\r\n          className=\"bg-green-600 text-white font-bold py-2 px-6 rounded-lg hover:bg-green-700 transition disabled:bg-green-300 disabled:cursor-not-allowed\"\r\n        >\r\n          {isUpdating ? 'Saving...' : 'Save Changes'}\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n        {/* LEFT COLUMN */}\r\n        <div className=\"lg:col-span-2 space-y-6\">\r\n          <div className=\"bg-white p-4 rounded-lg shadow space-y-4\">\r\n            <div>\r\n              <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700\">Title</label>\r\n              <input type=\"text\" id=\"title\" name=\"title\" value={formData.title} onChange={handleChange} required className=\"mt-1 block w-full text-2xl p-2 border-gray-300 rounded-md\"/>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"excerpt\" className=\"block text-sm font-medium text-gray-700\">Excerpt</label>\r\n              <textarea id=\"excerpt\" name=\"excerpt\" value={formData.excerpt} onChange={handleChange} required rows=\"3\" className=\"mt-1 block w-full input\"/>\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-white rounded-lg p-2 shadow\">\r\n            <label className=\"block text-sm font-medium text-gray-700 p-4 pb-0\">Content</label>\r\n            <TiptapEditor content={content} onContentChange={setContent} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* RIGHT COLUMN */}\r\n        <div className=\"lg:col-span-1 space-y-6\">\r\n           {status && <p className=\"text-center text-sm p-4 bg-gray-100 rounded\">{status}</p>}\r\n          <div className=\"bg-white p-4 rounded-lg shadow\">\r\n            <h2 className=\"text-lg font-semibold border-b pb-2 mb-4\">Featured Image</h2>\r\n            <input type=\"file\" id=\"image\" onChange={handleImageUpload} className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"/>\r\n            {isUploading && <p className=\"mt-2 text-sm\">Uploading...</p>}\r\n            {formData.featuredImageUrl && (\r\n              <div className=\"mt-4\">\r\n                <img src={formData.featuredImageUrl} alt=\"Preview\" className=\"w-full h-auto rounded-md\" />\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"bg-white p-4 rounded-lg shadow\">\r\n            <h2 className=\"text-lg font-semibold border-b pb-2 mb-4\">Post Settings</h2>\r\n            <div>\r\n              <label htmlFor=\"category\" className=\"block text-sm font-medium text-gray-700\">Category</label>\r\n              <select id=\"category\" name=\"category\" value={formData.category} onChange={handleChange} className=\"mt-1 block w-full input\">\r\n                <option>Strategic Insights</option>\r\n                <option>Operational Excellence</option>\r\n                <option>Leadership & Culture</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"mt-4\">\r\n              <label htmlFor=\"slug\" className=\"block text-sm font-medium text-gray-700\">Slug (URL)</label>\r\n              <input type=\"text\" id=\"slug\" name=\"slug\" value={formData.slug} readOnly className=\"mt-1 block w-full input bg-gray-100\"/>\r\n            </div>\r\n          </div>\r\n         \r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}"],"names":[],"mappings":"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","ignoreList":[0]}