{"version":3,"sources":["turbopack:///[project]/node_modules/next/navigation.js","turbopack:///[project]/lib/api.js","turbopack:///[project]/hooks/useAuth.js","turbopack:///[project]/app/(admin)/admin/posts/new/page.jsx"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n","export const api = process.env.NEXT_PUBLIC_API_URL;","// hooks/useAuth.js\r\n'use client';\r\nimport { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\n\r\nconst useAuth = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      // Here you could add a step to verify the token with the backend\r\n      // For now, we'll just check if it exists.\r\n      setIsAuthenticated(true);\r\n    } else {\r\n      // If no token, redirect to login page\r\n      router.push('/admin/login');\r\n    }\r\n    setLoading(false);\r\n  }, [router]);\r\n\r\n  return { isAuthenticated, loading };\r\n};\r\n\r\nexport default useAuth;","'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'next/navigation';\r\nimport useAuth from '../../../../../hooks/useAuth';\r\nimport TiptapEditor from '../../../../../components/TiptapEditor';\r\nimport {api} from '@/lib/api';\r\nimport Link from 'next/link';\r\n\r\nexport default function NewPostPage() {\r\n  const { isAuthenticated, loading } = useAuth();\r\n  const router = useRouter();\r\n\r\n  const [title, setTitle] = useState('');\r\n  const [slug, setSlug] = useState('');\r\n  const [excerpt, setExcerpt] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [category, setCategory] = useState('Strategic Insights');\r\n  const [status, setStatus] = useState('');\r\n  const [isPublishing, setIsPublishing] = useState(false);\r\n  const [featuredImageUrl, setFeaturedImageUrl] = useState('');\r\n  const [isUploading, setIsUploading] = useState(false);\r\n \r\n  // Auto-generate slug (no change here)\r\n  useEffect(() => {\r\n    const generatedSlug = title.toLowerCase().trim().replace(/[^\\w\\s-]/g, '').replace(/[\\s_-]+/g, '-').replace(/^-+|-+$/g, '');\r\n    setSlug(generatedSlug);\r\n  }, [title]);\r\n\r\n  const handleImageUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    setIsUploading(true);\r\n    setStatus('Uploading image...');\r\n\r\n    try {\r\n      const token = localStorage.getItem('authToken');\r\n      const res = await axios.post(`${api}/upload`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'x-auth-token': token,\r\n        },\r\n      });\r\n\r\n      // The backend returns the secure URL from Cloudinary\r\n      setFeaturedImageUrl(res.data.imageUrl);\r\n      setStatus('Image uploaded successfully!');\r\n    } catch (err) {\r\n      console.error('Image upload error:', err);\r\n      setStatus('Image upload failed.');\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsPublishing(true);\r\n    setStatus('Publishing...');\r\n\r\n    try {\r\n      const token = localStorage.getItem('authToken');\r\n      if (!token) throw new Error('Authentication error.');\r\n\r\n      const newPost = { title, slug, excerpt, content, category,featuredImageUrl };\r\n      await axios.post(`${api}/posts`, newPost, {\r\n        headers: { 'x-auth-token': token },\r\n      });\r\n\r\n      setStatus('Post published successfully!');\r\n      setTimeout(() => router.push('/admin/posts'), 1500);\r\n\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.msg || 'Failed to publish post.';\r\n      setStatus(errorMessage);\r\n    } finally {\r\n      setIsPublishing(false);\r\n    }\r\n  };\r\n\r\n if (loading) {\r\n    return <div className=\"flex items-center justify-center min-h-screen\">Loading...</div>;\r\n  }\r\n\r\n  if(isAuthenticated === false && !loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\"> \r\n        <p className=\"text-red-600 font-bold\">You must be logged in to access this page.</p>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <Link href=\"/admin/dashboard\" className=\"text-blue-600 hover:underline mb-4 inline-block\">‚Üê Back to Dashboard</Link>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h1 className=\"text-3xl font-bold\">Create New Post</h1>\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isPublishing}\r\n            className=\"bg-blue-600 text-white font-bold py-2 px-6 rounded-lg hover:bg-blue-700 transition disabled:bg-blue-300 disabled:cursor-not-allowed\"\r\n          >\r\n            {isPublishing ? 'Publishing...' : 'Publish Post'}\r\n          </button>\r\n        </div>\r\n\r\n        {/* --- TWO-COLUMN LAYOUT GRID --- */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n           \r\n          \r\n          {/* --- LEFT COLUMN (Main Content) --- */}\r\n          <div className=\"lg:col-span-2 space-y-6\">\r\n            {/* Title */}\r\n            <div className=\"bg-white p-4 rounded-lg shadow\">\r\n              <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700\">Title</label>\r\n              <input type=\"text\" id=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} required className=\"mt-1 block w-full text-xl p-2 border-2 border-gray-200 rounded-md outline-0\"/>\r\n            </div>\r\n            \r\n            {/* Content (Rich Text Editor) */}\r\n            <div className=\"bg-white rounded-lg shadow p-2\">\r\n              <label className=\"block text-sm font-medium text-gray-700 p-4 pb-0\">Content</label>\r\n              <TiptapEditor\r\n                content={content}\r\n                onContentChange={(newContent) => setContent(newContent)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* --- RIGHT COLUMN (Sidebar for Settings) --- */}\r\n          <div className=\"lg:col-span-1 space-y-6\">\r\n            {/* Status Message Area */}\r\n            {status && <p className=\"text-center text-sm text-gray-600 p-4 bg-gray-100 rounded\">{status}</p>}\r\n            <div className=\"bg-white p-4 rounded-lg shadow\">\r\n              <h2 className=\"text-lg font-semibold border-b pb-2 mb-4\">Post Settings</h2>\r\n              \r\n              {/* Category */}\r\n              <div>\r\n                <label htmlFor=\"category\" className=\"block text-sm font-medium text-gray-700\">Category</label>\r\n                <select id=\"category\" value={category} onChange={(e) => setCategory(e.target.value)} className=\"mt-1 block w-full p-2 border-2 border-gray-200 outline-0 rounded-md\">\r\n                  <option>Strategic Insights</option>\r\n                  <option>Operational Excellence</option>\r\n                  <option>Leadership & Culture</option>\r\n                </select>\r\n              </div>\r\n\r\n              {/* Slug (URL) */}\r\n              <div className=\"mt-4\">\r\n                <label htmlFor=\"slug\" className=\"block text-sm font-medium text-gray-700\">Slug (URL)</label>\r\n                <input type=\"text\" id=\"slug\" value={slug} readOnly className=\"mt-1 block w-full p-2 border-2 border-gray-200 outline-0 rounded-md bg-gray-100\"/>\r\n              </div>\r\n\r\n              <div className=\"bg-white p-4 rounded-lg shadow\">\r\n                <h2 className=\"text-lg font-semibold border-b pb-2 mb-4\">Featured Image</h2>\r\n                <input type=\"file\" id=\"image\" onChange={handleImageUpload} className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"/>\r\n                {isUploading && <p className=\"mt-2 text-sm\">Uploading...</p>}\r\n                \r\n                {/* Image Preview */}\r\n                {featuredImageUrl && (\r\n                    <div className=\"mt-4\">\r\n                    <img src={featuredImageUrl} alt=\"Preview\" className=\"w-full h-auto rounded-md\" />\r\n                    </div>\r\n                )}\r\n               </div>\r\n            </div>\r\n            \r\n            <div className=\"bg-white p-4 rounded-lg shadow\">\r\n              <h2 className=\"text-lg font-semibold border-b pb-2 mb-4\">Excerpt</h2>\r\n              <p className=\"text-xs text-gray-500 mb-2\">A short summary of the post for previews.</p>\r\n              <textarea id=\"excerpt\" value={excerpt} onChange={(e) => setExcerpt(e.target.value)} required rows=\"5\" className=\"mt-1 block w-full p-2 border-2 border-gray-200 outline-0 rounded-md\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","ignoreList":[0]}